#!/bin/sh

# Make sure the script is indeed invoked
touch /tmp/001-services-start
logger -t "rtl8156" "services-start: setting up USB Ethernet interface..."

# Detect the USB Ethernet interface
usb_interface=$(dmesg | grep -i 'r8152' | awk '{print $3}' | grep -E 'eth[0-9]' | tail -n1 | tr -d ':')

if [ -z "$usb_interface" ]; then
    echo "No USB Ethernet interface detected" >> /tmp/001-services-start
    logger -t "rtl8156" "services-start: No USB Ethernet interface detected"
    exit 1
fi

logger -t "rtl8156" "services-start: detected $usb_interface"
echo "Detected USB interface: $usb_interface" >> /tmp/001-services-start

# Calculate the RPS CPU mask based on the number of cores
ncores=$(cat /proc/cpuinfo | grep -c processor)
rps_mask=$(( (1 << ncores) - 1 ))

# Apply RPS CPU mask to the USB interface
echo $rps_mask > /sys/class/net/$usb_interface/queues/rx-0/rps_cpus
echo "echo $rps_mask > /sys/class/net/$usb_interface/queues/rx-0/rps_cpus: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Update nvram variables with checks to avoid duplication
# Verify and update br0_ifnames
if ! nvram get br0_ifnames | grep -qw "$usb_interface"; then
    nvram set br0_ifnames="$(nvram get br0_ifnames) $usb_interface"
    echo "nvram set br0_ifnames: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start
else
    echo "$usb_interface is already in br0_ifnames" >> /tmp/001-services-start
fi

# Verify and update lan_ifnames
if ! nvram get lan_ifnames | grep -qw "$usb_interface"; then
    nvram set lan_ifnames="$(nvram get lan_ifnames) $usb_interface"
    echo "nvram set lan_ifnames: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start
else
    echo "$usb_interface is already in lan_ifnames" >> /tmp/001-services-start
fi

# Verify and update wired_ifnames
if ! nvram get wired_ifnames | grep -qw "$usb_interface"; then
    nvram set wired_ifnames="$(nvram get wired_ifnames) $usb_interface"
    echo "nvram set wired_ifnames: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start
else
    echo "$usb_interface is already in wired_ifnames" >> /tmp/001-services-start
fi

# Add the USB interface into br0
brctl addif br0 $usb_interface
echo "brctl addif br0 $usb_interface: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Set TX queue length and bring it up
ifconfig $usb_interface txqueuelen 2500 allmulti up
echo "ifconfig $usb_interface txqueuelen 2500 allmulti up: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Set interface speed and duplex mode
# ethtool -s $usb_interface speed 2500 duplex full
ethtool -s $usb_interface autoneg on advertise 0x80000000002f
echo "ethtool -s $usb_interface speed 2500 duplex full: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Enable USB scatter/gather
echo enable > /sys/class/net/$usb_interface/rtl_adv/sg_en
echo "echo enable > /sys/class/net/$usb_interface/rtl_adv/sg_en: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Enable RPS (Receive Packet Steering)
echo $rps_mask > /sys/class/net/$usb_interface/queues/rx-0/rps_cpus
echo "echo $rps_mask > /sys/class/net/$usb_interface/queues/rx-0/rps_cpus: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Adjust RX/TX combined queues
ethtool -L $usb_interface combined 3
echo "ethtool -L $usb_interface combined 3: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Increase RX interrupt coalescing
ethtool -C $usb_interface rx-usecs 4
echo "ethtool -C $usb_interface rx-usecs 4: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Modify RX and TX buffer sizes
ethtool -G $usb_interface rx 1024 tx 512
echo "ethtool -G $usb_interface rx 100 tx 100: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Set the rx copybreak value in bytes.
ethtool --set-tunable $usb_interface rx-copybreak 256
echo "ethtool --set-tunable $usb_interface rx-copybreak 256: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Changes the pause parameters of the specified Ethernet device.
# Disable flow control
ethtool -A $usb_interface rx off tx off
echo "ethtool -A $usb_interface rx off tx off: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start
# Enable flow control
# ethtool -A $usb_interface rx on tx off
# echo "ethtool -A $usb_interface rx on tx off: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

# Restart the USB interface to apply changes
ifconfig $usb_interface down && ifconfig $usb_interface up
echo "ifconfig $usb_interface down && ifconfig $usb_interface up: $( [ $? -eq 0 ] && echo 'OK (0)' || echo 'ERROR ($?)' )" >> /tmp/001-services-start

logger -t "rtl8156" "services-start: all done"
date >> /tmp/001-services-start
